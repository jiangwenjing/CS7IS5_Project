{"version":3,"sources":["login.js","banner.js","chatbot.js","card.js","index.js"],"names":["Login","React","useState","visible","setVisible","confirmLoading","setConfirmLoading","setModalText","tpye","onClick","title","onOk","setTimeout","onCancel","console","log","name","className","initialValues","remember","onFinish","values","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","valuePropName","noStyle","href","banner","htmlType","Banner","contentStyle","height","color","lineHeight","textAlign","background","autoplay","style","Review","props","state","gender","age","steps","this","setState","width","value","Component","defaultProps","undefined","SimpleForm","id","trigger","user","options","label","validator","isNaN","component","asMessage","update","end","CardGroup","Meta","Card","span","padding","cover","alt","src","actions","SettingOutlined","EditOutlined","EllipsisOutlined","avatar","description","App","Header","Layout","Content","Footer","position","zIndex","theme","mode","defaultSelectedKeys","placement","closable","onClose","marginTop","margin","minHeight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0c39fba.chunk.js","sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport {Modal, Button, Form, Input, Checkbox, Alert} from 'antd';\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\n\nconst Login = () => {\n    const [visible, setVisible] = React.useState(false);\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\n    const [modalText, setModalText] = React.useState('Content of the modal');\n\n    const showModal = () => {\n        setVisible(true);\n    };\n\n    const handleOk = () => {\n        setModalText('The modal will be closed after two seconds');\n        setConfirmLoading(true);\n        setTimeout(() => {\n            setVisible(false);\n            setConfirmLoading(false);\n        }, 2000);\n    };\n\n    const handleCancel = () => {\n        console.log('Clicked cancel button');\n        setVisible(false);\n    };\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n\n    return (\n        <>\n            <span tpye=\"text\" onClick={showModal} >Login</span>\n            <Modal\n                title=\"Login\"\n                visible={visible}\n                onOk={handleOk}\n                confirmLoading={confirmLoading}\n                onCancel={handleCancel}\n            >\n                <Form\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Username!',\n                            },\n                        ]}\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Password!',\n                            },\n                        ]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                            <Checkbox>Remember me</Checkbox>\n                        </Form.Item>\n\n                        <a className=\"login-form-forgot\" href=\"\">\n                            Forgot password\n                        </a>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Alert message=\"If you don't have an account, will create one.\" banner /><br/>\n\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Log in\n                        </Button>\n\n\n\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default Login;","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Carousel } from 'antd';\n\nconst Banner = () => {\n    const contentStyle = {\n        height: '330px',\n        color: '#fff',\n        lineHeight: '330px',\n        textAlign: 'center',\n        background: '#364d79',\n    };\n    return(\n        <>\n            <Carousel autoplay>\n                <div>\n                    <h3 style={contentStyle}>1</h3>\n                </div>\n                <div>\n                    <h3 style={contentStyle}>2</h3>\n                </div>\n                <div>\n                    <h3 style={contentStyle}>3</h3>\n                </div>\n                <div>\n                    <h3 style={contentStyle}>4</h3>\n                </div>\n            </Carousel>\n        </>\n    );\n\n}\n\nexport default Banner;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ChatBot from 'react-simple-chatbot';\n\nclass Review extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            gender: '',\n            age: '',\n        };\n    }\n\n    componentWillMount() {\n        const { steps } = this.props;\n        const { name, gender, age } = steps;\n\n        this.setState({ name, gender, age });\n    }\n\n    render() {\n        const { name, gender, age } = this.state;\n        return (\n            <div style={{ width: '100%' }}>\n                <h3>Summary</h3>\n                <table>\n                    <tbody>\n                    <tr>\n                        <td>Name</td>\n                        <td>{name.value}</td>\n                    </tr>\n                    <tr>\n                        <td>Gender</td>\n                        <td>{gender.value}</td>\n                    </tr>\n                    <tr>\n                        <td>Age</td>\n                        <td>{age.value}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nReview.propTypes = {\n    steps: PropTypes.object,\n};\n\nReview.defaultProps = {\n    steps: undefined,\n};\n\nclass SimpleForm extends Component {\n    render() {\n        return (\n            <ChatBot\n                steps={[\n                    {\n                        id: '1',\n                        message: 'What is your name?',\n                        trigger: 'name',\n                    },\n                    {\n                        id: 'name',\n                        user: true,\n                        trigger: '3',\n                    },\n                    {\n                        id: '3',\n                        message: 'Hi {previousValue}! What is your gender?',\n                        trigger: 'gender',\n                    },\n                    {\n                        id: 'gender',\n                        options: [\n                            { value: 'male', label: 'Male', trigger: '5' },\n                            { value: 'female', label: 'Female', trigger: '5' },\n                        ],\n                    },\n                    {\n                        id: '5',\n                        message: 'How old are you?',\n                        trigger: 'age',\n                    },\n                    {\n                        id: 'age',\n                        user: true,\n                        trigger: '7',\n                        validator: (value) => {\n                            if (isNaN(value)) {\n                                return 'value must be a number';\n                            } else if (value < 0) {\n                                return 'value must be positive';\n                            } else if (value > 120) {\n                                return `${value}? Come on!`;\n                            }\n\n                            return true;\n                        },\n                    },\n                    {\n                        id: '7',\n                        message: 'Great! Check out your summary',\n                        trigger: 'review',\n                    },\n                    {\n                        id: 'review',\n                        component: <Review />,\n                        asMessage: true,\n                        trigger: 'update',\n                    },\n                    {\n                        id: 'update',\n                        message: 'Would you like to update some field?',\n                        trigger: 'update-question',\n                    },\n                    {\n                        id: 'update-question',\n                        options: [\n                            { value: 'yes', label: 'Yes', trigger: 'update-yes' },\n                            { value: 'no', label: 'No', trigger: 'end-message' },\n                        ],\n                    },\n                    {\n                        id: 'update-yes',\n                        message: 'What field would you like to update?',\n                        trigger: 'update-fields',\n                    },\n                    {\n                        id: 'update-fields',\n                        options: [\n                            { value: 'name', label: 'Name', trigger: 'update-name' },\n                            { value: 'gender', label: 'Gender', trigger: 'update-gender' },\n                            { value: 'age', label: 'Age', trigger: 'update-age' },\n                        ],\n                    },\n                    {\n                        id: 'update-name',\n                        update: 'name',\n                        trigger: '7',\n                    },\n                    {\n                        id: 'update-gender',\n                        update: 'gender',\n                        trigger: '7',\n                    },\n                    {\n                        id: 'update-age',\n                        update: 'age',\n                        trigger: '7',\n                    },\n                    {\n                        id: 'end-message',\n                        message: 'Thanks! Your data was submitted successfully!',\n                        end: true,\n                    },\n                ]}\n            />\n        );\n    }\n}\n\nexport default SimpleForm;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport {Card, Avatar, Col, Row} from 'antd';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\n\nconst CardGroup = () => {\n    const { Meta } = Card;\n    return(\n        <>\n            <Row>\n                <Col span={6} style={{ padding: 5 }}>\n                    <Card\n                        // style={{ margin: 5 }}\n                        cover={\n                            <img\n                                alt=\"example\"\n                                src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                            />\n                        }\n                        actions={[\n                            <SettingOutlined key=\"setting\" />,\n                            <EditOutlined key=\"edit\" />,\n                            <EllipsisOutlined key=\"ellipsis\" />,\n                        ]}\n                    >\n                        <Meta\n                            avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                            title=\"Card title\"\n                            description=\"This is the description\"\n                        />\n                    </Card>\n                </Col>\n                <Col span={6} style={{ padding: 5 }}>\n                    <Card\n                        // style={{ marginRight: 10 }}\n                        cover={\n                            <img\n                                alt=\"example\"\n                                src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                            />\n                        }\n                        actions={[\n                            <SettingOutlined key=\"setting\" />,\n                            <EditOutlined key=\"edit\" />,\n                            <EllipsisOutlined key=\"ellipsis\" />,\n                        ]}\n                    >\n                        <Meta\n                            avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                            title=\"Card title\"\n                            description=\"This is the description\"\n                        />\n                    </Card>\n                </Col>\n                <Col span={6} style={{ padding: 5 }}>\n                    <Card\n                        // style={{ marginRight: 10 }}\n                        cover={\n                            <img\n                                alt=\"example\"\n                                src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                            />\n                        }\n                        actions={[\n                            <SettingOutlined key=\"setting\" />,\n                            <EditOutlined key=\"edit\" />,\n                            <EllipsisOutlined key=\"ellipsis\" />,\n                        ]}\n                    >\n                        <Meta\n                            avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                            title=\"Card title\"\n                            description=\"This is the description\"\n                        />\n                    </Card>\n                </Col>\n                <Col span={6} style={{ padding: 5 }}>\n                    <Card\n                        // style={{ paddingRight: 0 }}\n                        cover={\n                            <img\n                                alt=\"example\"\n                                src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                            />\n                        }\n                        actions={[\n                            <SettingOutlined key=\"setting\" />,\n                            <EditOutlined key=\"edit\" />,\n                            <EllipsisOutlined key=\"ellipsis\" />,\n                        ]}\n                    >\n                        <Meta\n                            avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                            title=\"Card title\"\n                            description=\"This is the description\"\n                        />\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n}\n\nexport default CardGroup;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n// import PropTypes from 'prop-types';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Menu, Breadcrumb, Drawer} from 'antd';\nimport Login from './login';\nimport Banner from './banner';\nimport SimpleForm from './chatbot';\nimport CardGroup from './card';\n\n\n\nconst App = () => {\n    const { Header, Content, Footer } = Layout;\n\n    const [visible, setVisible] = useState(false);\n    const showDrawer = () => {\n        setVisible(true);\n    };\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    return (\n        <>\n            <Layout>\n                <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                        <Menu.Item key=\"1\">nav 1</Menu.Item>\n                        <Menu.Item key=\"2\">nav 2</Menu.Item>\n                        <Menu.Item key=\"3\">nav 3</Menu.Item>\n                        <Menu.Item key=\"4\">\n                            <span type=\"primary\" onClick={showDrawer}>\n                                ChatBot\n                            </span>\n                            <Drawer\n                                title=\"Basic Drawer\"\n                                placement=\"right\"\n                                closable={false}\n                                onClose={onClose}\n                                visible={visible}\n                                width={400}\n                            >\n                                <SimpleForm/>\n                            </Drawer>\n                        </Menu.Item>\n                        <Menu.Item key=\"5\"><Login /></Menu.Item>\n\n                    </Menu>\n                </Header>\n                <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <div className=\"site-layout-background\" style={{ margin: 5, minHeight: 380 }}>\n                        <Banner />\n                    </div>\n                    <br/>\n                    <div>\n                        <CardGroup />\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n            </Layout>\n        </>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById('container'),);"],"sourceRoot":""}